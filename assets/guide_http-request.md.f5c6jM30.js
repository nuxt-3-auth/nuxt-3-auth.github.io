import{_ as t,o as s,c as e,a4 as a}from"./chunks/framework.2jBJKDl8.js";const g=JSON.parse('{"title":"HTTP Request","description":"","frontmatter":{},"headers":[],"relativePath":"guide/http-request.md","filePath":"guide/http-request.md"}'),i={name:"guide/http-request.md"},h=a(`<h1 id="http-request" tabindex="-1">HTTP Request <a class="header-anchor" href="#http-request" aria-label="Permalink to &quot;HTTP Request&quot;">​</a></h1><p>This module provides a simple way to make HTTP requests. It is based on the <a href="https://github.com/unjs/ofetch" target="_blank" rel="noreferrer"><code>ofetch</code></a> library.</p><p>To make a request, you can use the <code>$fetch</code> method provided by the <code>$auth</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useAuth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auth.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/books&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p><code>$auth.$fetch</code> use the <a href="https://nuxt.com/docs/api/utils/dollarfetch" target="_blank" rel="noreferrer">nuxt $fetch</a> under the hood, so you can use all the options provided by the nuxt fetch method. Plus, it adds one more option <code>auth</code> to make authenticated requests.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useAuth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auth.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/me&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  auth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><code>auth</code> option allow theses values:</p><table><thead><tr><th>Value</th><th>Description</th><th>Attach Access Token</th><th>Refresh access token</th><th>Retry request</th></tr></thead><tbody><tr><td><strong><code>&#39;auto&#39;</code></strong></td><td>✅</td><td>❌</td><td>❌</td><td>Make authenticated request if possible but doesn&#39;t refresh access token when token expires</td></tr><tr><td><code>true</code></td><td>✅</td><td>✅</td><td>✅</td><td>Make authenticated request and refresh token then retry if the response status is <code>401</code></td></tr><tr><td><code>false</code></td><td>❌</td><td>❌</td><td>❌</td><td>Make normal request</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>By default, the <a href="/api/options.html#useglobalfetch">useGlobalFetch</a> option is set to <code>true</code>, so the global <code>$fetch</code> is overridden by <code>$auth.$fetch</code>.</p><p>In case you want to use the default Nuxt <code>$fetch</code>, set <code>useGlobalFetch: false</code> in the <a href="/api/options.html#useglobalfetch">options</a>.</p></div>`,9),d=[h];function n(o,p,l,r,c,k){return s(),e("div",null,d)}const E=t(i,[["render",n]]);export{g as __pageData,E as default};
