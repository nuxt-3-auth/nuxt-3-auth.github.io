import{_ as e,o as r,c as t,a4 as a}from"./chunks/framework.2jBJKDl8.js";const _=JSON.parse('{"title":"Prerequisites","description":"","frontmatter":{},"headers":[],"relativePath":"prerequisites.md","filePath":"prerequisites.md"}'),o={name:"prerequisites.md"},s=a('<h1 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h1><h2 id="api-server" tabindex="-1">API server <a class="header-anchor" href="#api-server" aria-label="Permalink to &quot;API server&quot;">​</a></h2><p>Currently, this module supports login via API, so you need to have an API server to handle the login process meeting the following requirements:</p><ul><li>Have a login API, which responds with an access token and a refresh token.</li><li>Have a refresh token API, which responds with a new access token and a new refresh token.</li><li>Have a logout API, which deletes the access token and refresh token.</li><li>Have a user information retrieval API, which responds with user information.</li><li>Access token and Refresh token are JWT tokens.</li></ul><h2 id="nuxt-app" tabindex="-1">Nuxt App <a class="header-anchor" href="#nuxt-app" aria-label="Permalink to &quot;Nuxt App&quot;">​</a></h2><p>There are several other factors you need to consider when using this module in your project:</p><ul><li>Tokens are stored in cookies.</li><li>Login sessions and user information are stored in Pinia store.</li><li>This module uses <a href="https://github.com/unjs/ofetch" target="_blank" rel="noreferrer"><code>ofetch</code></a> for API communication (by default on Nuxt 3), so interceptors are attached to <code>$fetch</code> by default. If you use axios or another library for API calls, you need to manually add corresponding interceptors for that library.</li></ul>',7),i=[s];function n(l,c,h,u,d,p){return r(),t("div",null,i)}const m=e(o,[["render",n]]);export{_ as __pageData,m as default};
